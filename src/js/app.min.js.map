{"version":3,"sources":["app.min.js"],"names":["highlighter","response","form","document","getElementById","fields","textContent","disabled","validator","i","length","input","label","previousElementSibling","className","_i","_form","_input","param","_label","parentNode","removeChild","insertAdjacentHTML","msg","status","_i2","_input2","_label2","success","error","onsubmit","event","preventDefault","target","data","FormData","xhr","XMLHttpRequest","open","send","onreadystatechange","readyState","DONE","JSON","parse","responseText"],"mappings":"AAAA,cAEA,WAsBE,QAASA,GAAYC,GACnB,GAAIC,GAAOC,SAASC,eAAe,gBAC/BC,GAAU,OAAQ,QAAS,UAI/B,IAFAF,SAASC,eAAe,UAAUE,YAAc,OAChDH,SAASC,eAAe,UAAUG,UAAW,EACzCN,EAASO,UAAW,CAEtB,IAAK,GAAIC,GAAI,EAAGA,EAAIJ,EAAOK,OAAQD,IAAK,CACtC,GAAIE,GAAQR,SAASC,eAAeC,EAAOI,IACvCG,EAAQD,EAAME,sBAClBF,GAAMG,UAAY,GAClBF,EAAME,UAAY,GAGpB,IAAK,GAAIC,GAAK,EAAGA,EAAKd,EAASO,UAAUE,OAAQK,IAAM,CACrD,GAAIC,GAAQb,SAASC,eAAe,gBAChCa,EAASd,SAASC,eAAeH,EAASO,UAAUO,GAAIG,OACxDC,EAASF,EAAOJ,sBACpBI,GAAOH,UAAY,cACnBK,EAAOL,UAAY,aAEfb,EAASO,UAAUE,SAAWK,EAAK,IACjCZ,SAASC,eAAe,iBAC1BD,SAASC,eAAe,gBAAgBgB,WAAWC,YAAYlB,SAASC,eAAe,iBAEzFY,EAAMM,mBAAmB,YAAa,2CAA6CrB,EAASO,UAAUO,GAAIQ,IAAM,UAItH,GAAItB,EAASuB,OAAQ,CAEnB,IAAK,GAAIC,GAAM,EAAGA,EAAMpB,EAAOK,OAAQe,IAAO,CAC5C,GAAIC,GAAUvB,SAASC,eAAeC,EAAOoB,IACzCE,EAAUD,EAAQb,sBACtBa,GAAQZ,UAAY,GACpBa,EAAQb,UAAY,GAGlBX,SAASC,eAAe,iBAC1BD,SAASC,eAAe,gBAAgBgB,WAAWC,YAAYlB,SAASC,eAAe,iBAGrFH,EAASuB,OAAOI,SAClB1B,EAAKoB,mBAAmB,YAAa,6CAA+CrB,EAASuB,OAAOI,QAAU,QAE5G3B,EAASuB,OAAOK,OAClB3B,EAAKoB,mBAAmB,YAAa,2CAA6CrB,EAASuB,OAAOK,MAAQ,SAnEhE,OAA5C1B,SAASC,eAAe,kBAE1BD,SAASC,eAAe,gBAAgB0B,SAAW,SAAUC,GAC3DA,EAAMC,gBACN,IAAI9B,GAAO6B,EAAME,OACbC,EAAO,GAAIC,UAASjC,GACpBkC,EAAM,GAAIC,eACdD,GAAIE,KAAK,OAAQ,WAAW,GAC5BF,EAAIG,KAAKL,GAET/B,SAASC,eAAe,UAAUE,YAAc,aAChDH,SAASC,eAAe,UAAUG,UAAW,EAE7C6B,EAAII,mBAAqB,WACnBJ,EAAIK,aAAeJ,eAAeK,MACpC1C,EAAY2C,KAAKC,MAAMR,EAAIS","file":"app.min.js","sourcesContent":["'use strict';\n\n(function () {\n  // Check if #contact-form is present\n  if (document.getElementById('contact-form') !== null) {\n    // Set an on submit event\n    document.getElementById('contact-form').onsubmit = function (event) {\n      event.preventDefault();\n      var form = event.target;\n      var data = new FormData(form);\n      var xhr = new XMLHttpRequest();\n      xhr.open('post', '/submit', true);\n      xhr.send(data);\n      // Update the send button to indicate progress\n      document.getElementById('submit').textContent = 'Sending...';\n      document.getElementById('submit').disabled = true;\n      // Handle the response\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n          highlighter(JSON.parse(xhr.responseText));\n        }\n      };\n    };\n  }\n  function highlighter(response) {\n    var form = document.getElementById('contact-form');\n    var fields = ['name', 'email', 'comment'];\n    // Change send button back to normal\n    document.getElementById('submit').textContent = 'Send';\n    document.getElementById('submit').disabled = false;\n    if (response.validator) {\n      // Remove any existing error classes\n      for (var i = 0; i < fields.length; i++) {\n        var input = document.getElementById(fields[i]);\n        var label = input.previousElementSibling;\n        input.className = '';\n        label.className = '';\n      }\n      // Add classes to error items\n      for (var _i = 0; _i < response.validator.length; _i++) {\n        var _form = document.getElementById('contact-form');\n        var _input = document.getElementById(response.validator[_i].param);\n        var _label = _input.previousElementSibling;\n        _input.className = 'error-input';\n        _label.className = 'error-text';\n        // Display form message\n        if (response.validator.length === _i + 1) {\n          if (document.getElementById('form-message')) {\n            document.getElementById('form-message').parentNode.removeChild(document.getElementById('form-message'));\n          }\n          _form.insertAdjacentHTML('beforeend', '<p id=\"form-message\" class=\"error-text\">' + response.validator[_i].msg + '</p>');\n        }\n      }\n    }\n    if (response.status) {\n      // Remove any existing error classes\n      for (var _i2 = 0; _i2 < fields.length; _i2++) {\n        var _input2 = document.getElementById(fields[_i2]);\n        var _label2 = _input2.previousElementSibling;\n        _input2.className = '';\n        _label2.className = '';\n      }\n      // Remove any existing messages\n      if (document.getElementById('form-message')) {\n        document.getElementById('form-message').parentNode.removeChild(document.getElementById('form-message'));\n      }\n      // Format and display message\n      if (response.status.success) {\n        form.insertAdjacentHTML('beforeend', '<p id=\"form-message\" class=\"success-text\">' + response.status.success + '</p>');\n      }\n      if (response.status.error) {\n        form.insertAdjacentHTML('beforeend', '<p id=\"form-message\" class=\"error-text\">' + response.status.error + '</p>');\n      }\n    }\n  }\n})();"]}