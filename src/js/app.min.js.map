{"version":3,"sources":["app.min.js"],"names":["highlighter","response","form","document","getElementById","fields","parentNode","removeChild","textContent","disabled","i","length","input","label","previousElementSibling","className","validator","_i","_form","_input","param","_label","insertAdjacentHTML","msg","status","success","error","onsubmit","event","preventDefault","target","data","FormData","xhr","XMLHttpRequest","open","send","onreadystatechange","readyState","DONE","JSON","parse","responseText"],"mappings":"AAAA,cAEA,WAsBE,QAASA,GAAYC,GACnB,GAAIC,GAAOC,SAASC,eAAe,gBAC/BC,GAAU,OAAQ,QAAS,UAE3BF,UAASC,eAAe,iBAC1BD,SAASC,eAAe,gBAAgBE,WAAWC,YAAYJ,SAASC,eAAe,iBAGzFD,SAASC,eAAe,UAAUI,YAAc,OAChDL,SAASC,eAAe,UAAUK,UAAW,CAE7C,KAAK,GAAIC,GAAI,EAAGA,EAAIL,EAAOM,OAAQD,IAAK,CACtC,GAAIE,GAAQT,SAASC,eAAeC,EAAOK,IACvCG,EAAQD,EAAME,sBAClBF,GAAMG,UAAY,GAClBF,EAAME,UAAY,GAEpB,GAAId,EAASe,UASX,IAAK,GAAIC,GAAK,EAAGA,EAAKhB,EAASe,UAAUL,OAAQM,IAAM,CACrD,GAAIC,GAAQf,SAASC,eAAe,gBAChCe,EAAShB,SAASC,eAAeH,EAASe,UAAUC,GAAIG,OACxDC,EAASF,EAAOL,sBACpBK,GAAOJ,UAAY,cACnBM,EAAON,UAAY,aAEfd,EAASe,UAAUL,SAAWM,EAAK,IACjCd,SAASC,eAAe,iBAC1BD,SAASC,eAAe,gBAAgBE,WAAWC,YAAYJ,SAASC,eAAe,iBAEzFc,EAAMI,mBAAmB,YAAa,2CAA6CrB,EAASe,UAAUC,GAAIM,IAAM,SAIlHtB,EAASuB,SAcPvB,EAASuB,OAAOC,SAClBvB,EAAKoB,mBAAmB,YAAa,6CAA+CrB,EAASuB,OAAOC,QAAU,QAE5GxB,EAASuB,OAAOE,OAClBxB,EAAKoB,mBAAmB,YAAa,2CAA6CrB,EAASuB,OAAOE,MAAQ,SA/EhE,OAA5CvB,SAASC,eAAe,kBAE1BD,SAASC,eAAe,gBAAgBuB,SAAW,SAAUC,GAC3DA,EAAMC,gBACN,IAAI3B,GAAO0B,EAAME,OACbC,EAAO,GAAIC,UAAS9B,GACpB+B,EAAM,GAAIC,eACdD,GAAIE,KAAK,OAAQ,WAAW,GAC5BF,EAAIG,KAAKL,GAET5B,SAASC,eAAe,UAAUI,YAAc,aAChDL,SAASC,eAAe,UAAUK,UAAW,EAE7CwB,EAAII,mBAAqB,WACnBJ,EAAIK,aAAeJ,eAAeK,MACpCvC,EAAYwC,KAAKC,MAAMR,EAAIS","file":"app.min.js","sourcesContent":["'use strict';\n\n(function () {\n  // Check if #contact-form is present\n  if (document.getElementById('contact-form') !== null) {\n    // Set an on submit event\n    document.getElementById('contact-form').onsubmit = function (event) {\n      event.preventDefault();\n      var form = event.target;\n      var data = new FormData(form);\n      var xhr = new XMLHttpRequest();\n      xhr.open('post', '/submit', true);\n      xhr.send(data);\n      // Update the send button to indicate progress\n      document.getElementById('submit').textContent = 'Sending...';\n      document.getElementById('submit').disabled = true;\n      // Handle the response\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n          highlighter(JSON.parse(xhr.responseText));\n        }\n      };\n    };\n  }\n  function highlighter(response) {\n    var form = document.getElementById('contact-form');\n    var fields = ['name', 'email', 'comment'];\n    // Remove any existing messages\n    if (document.getElementById('form-message')) {\n      document.getElementById('form-message').parentNode.removeChild(document.getElementById('form-message'));\n    }\n    // Change send button back to normal\n    document.getElementById('submit').textContent = 'Send';\n    document.getElementById('submit').disabled = false;\n    // Remove any existing error classes\n    for (var i = 0; i < fields.length; i++) {\n      var input = document.getElementById(fields[i]);\n      var label = input.previousElementSibling;\n      input.className = '';\n      label.className = '';\n    }\n    if (response.validator) {\n      // // Remove any existing error classes\n      // for (let i = 0; i < fields.length; i++) {\n      //   let input = document.getElementById(fields[i]);\n      //   let label = input.previousElementSibling;\n      //   input.className = '';\n      //   label.className = '';\n      // }\n      // Add classes to error items\n      for (var _i = 0; _i < response.validator.length; _i++) {\n        var _form = document.getElementById('contact-form');\n        var _input = document.getElementById(response.validator[_i].param);\n        var _label = _input.previousElementSibling;\n        _input.className = 'error-input';\n        _label.className = 'error-text';\n        // Display form message\n        if (response.validator.length === _i + 1) {\n          if (document.getElementById('form-message')) {\n            document.getElementById('form-message').parentNode.removeChild(document.getElementById('form-message'));\n          }\n          _form.insertAdjacentHTML('beforeend', '<p id=\"form-message\" class=\"error-text\">' + response.validator[_i].msg + '</p>');\n        }\n      }\n    }\n    if (response.status) {\n      // // Remove any existing error classes\n      // for (let i = 0; i < fields.length; i++) {\n      //   let input = document.getElementById(fields[i]);\n      //   let label = input.previousElementSibling;\n      //   input.className = '';\n      //   label.className = '';\n      // }\n      // // Remove any existing messages\n      // if (document.getElementById('form-message')) {\n      //   document.getElementById('form-message').parentNode\n      //   .removeChild(document.getElementById('form-message'));\n      // }\n      // Format and display message\n      if (response.status.success) {\n        form.insertAdjacentHTML('beforeend', '<p id=\"form-message\" class=\"success-text\">' + response.status.success + '</p>');\n      }\n      if (response.status.error) {\n        form.insertAdjacentHTML('beforeend', '<p id=\"form-message\" class=\"error-text\">' + response.status.error + '</p>');\n      }\n    }\n  }\n})();"]}