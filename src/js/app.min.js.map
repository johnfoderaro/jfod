{"version":3,"sources":["app.min.js"],"names":["contactForm","document","getElementById","highlighter","response","form","fields","parentNode","removeChild","textContent","disabled","i","length","input","label","previousElementSibling","className","validator","_i","_form","_input","param","_label","insertAdjacentHTML","msg","status","success","error","onsubmit","event","preventDefault","target","data","FormData","xhr","XMLHttpRequest","open","send","onreadystatechange","readyState","DONE","JSON","parse","responseText","links","Array","from","getElementsByTagName","forEach","link","onclick","innerText","ga","eventCategory","eventAction","eventLabel","href"],"mappings":"AAAA,YAGA,IAAIA,aAAcC,SAASC,eAAe,eAC1C,IAAIF,YAAa,CACf,GAAIG,aAAc,SAAqBC,GACrC,GAAIC,GAAOJ,SAASC,eAAe,gBAC/BI,GAAU,OAAQ,QAAS,UAE3BL,UAASC,eAAe,iBAC1BD,SAASC,eAAe,gBAAgBK,WAAWC,YAAYP,SAASC,eAAe,iBAGzFD,SAASC,eAAe,UAAUO,YAAc,OAChDR,SAASC,eAAe,UAAUQ,UAAW,CAE7C,KAAK,GAAIC,GAAI,EAAGA,EAAIL,EAAOM,OAAQD,IAAK,CACtC,GAAIE,GAAQZ,SAASC,eAAeI,EAAOK,IACvCG,EAAQD,EAAME,sBAClBF,GAAMG,UAAY,GAClBF,EAAME,UAAY,GAGpB,GAAIZ,EAASa,UAEX,IAAK,GAAIC,GAAK,EAAGA,EAAKd,EAASa,UAAUL,OAAQM,IAAM,CACrD,GAAIC,GAAQlB,SAASC,eAAe,gBAChCkB,EAASnB,SAASC,eAAeE,EAASa,UAAUC,GAAIG,OACxDC,EAASF,EAAOL,sBACpBK,GAAOJ,UAAY,QACnBM,EAAON,UAAY,OAEfZ,EAASa,UAAUL,SAAWM,EAAK,IAEjCjB,SAASC,eAAe,iBAC1BD,SAASC,eAAe,gBAAgBK,WAAWC,YAAYP,SAASC,eAAe,iBAGzFiB,EAAMI,mBAAmB,YAAa,mDAAqDnB,EAASa,UAAUC,GAAIM,IAAM,SAK1HpB,EAASqB,SACPrB,EAASqB,OAAOC,SAClBrB,EAAKkB,mBAAmB,YAAa,qDAAuDnB,EAASqB,OAAOC,QAAU,QAEpHtB,EAASqB,OAAOE,OAClBtB,EAAKkB,mBAAmB,YAAa,mDAAqDnB,EAASqB,OAAOE,MAAQ,SAKxHtB,MAAKuB,SAAW,SAAUC,GACxBA,EAAMC,gBAEN,IAAIzB,GAAOwB,EAAME,OACbC,EAAO,GAAIC,UAAS5B,GACpB6B,EAAM,GAAIC,eAEdD,GAAIE,KAAK,OAAQ,WAAW,GAE5BF,EAAIG,KAAKL,GAET/B,SAASC,eAAe,UAAUO,YAAc,aAChDR,SAASC,eAAe,UAAUQ,UAAW,EAE7CwB,EAAII,mBAAqB,WACnBJ,EAAIK,aAAeJ,eAAeK,MAGpCrC,YAAYsC,KAAKC,MAAMR,EAAIS,iBAQnC,GAAIC,OAAQC,MAAMC,KAAK7C,SAAS8C,qBAAqB,KACrDH,OAAMI,QAAQ,SAAUC,GACtBA,EAAKC,QAAU,SAAUrB,GACZoB,EAAKE,SACe,YAAhBF,EAAKlB,QAElBqB,GAAG,OAAQ,QAAS,QAClBC,cAAe,gBACfC,YAAa,QACbC,WAAY1B,EAAME,OAAOyB","file":"app.min.js","sourcesContent":["'use strict';\n\n// Set an on submit event\nvar contactForm = document.getElementById('contact-form');\nif (contactForm) {\n  var highlighter = function highlighter(response) {\n    var form = document.getElementById('contact-form');\n    var fields = ['name', 'email', 'comment'];\n    // Remove any existing messages\n    if (document.getElementById('form-message')) {\n      document.getElementById('form-message').parentNode.removeChild(document.getElementById('form-message'));\n    }\n    // Change send button back to normal\n    document.getElementById('submit').textContent = 'Send';\n    document.getElementById('submit').disabled = false;\n    // Remove any existing error classes\n    for (var i = 0; i < fields.length; i++) {\n      var input = document.getElementById(fields[i]);\n      var label = input.previousElementSibling;\n      input.className = '';\n      label.className = '';\n    }\n    // Highlight invalid input fields\n    if (response.validator) {\n      // Add classes to error items\n      for (var _i = 0; _i < response.validator.length; _i++) {\n        var _form = document.getElementById('contact-form');\n        var _input = document.getElementById(response.validator[_i].param);\n        var _label = _input.previousElementSibling;\n        _input.className = 'input';\n        _label.className = 'text';\n        // Display form error message if necessary\n        if (response.validator.length === _i + 1) {\n          // Clear existing form essages\n          if (document.getElementById('form-message')) {\n            document.getElementById('form-message').parentNode.removeChild(document.getElementById('form-message'));\n          }\n          // Add error message\n          _form.insertAdjacentHTML('beforeend', '<p id=\"form-message\" class=\"form-message error\">' + response.validator[_i].msg + '</p>');\n        }\n      }\n    }\n    // Format and display error or sucess message once submitted\n    if (response.status) {\n      if (response.status.success) {\n        form.insertAdjacentHTML('beforeend', '<p id=\"form-message\" class=\"form-message success\">' + response.status.success + '</p>');\n      }\n      if (response.status.error) {\n        form.insertAdjacentHTML('beforeend', '<p id=\"form-message\" class=\"form-message error\">' + response.status.error + '</p>');\n      }\n    }\n  };\n\n  form.onsubmit = function (event) {\n    event.preventDefault();\n    // Cache some constants\n    var form = event.target;\n    var data = new FormData(form);\n    var xhr = new XMLHttpRequest();\n    // Set post end-point\n    xhr.open('post', '/submit', true);\n    // Send data\n    xhr.send(data);\n    // Update the send button to indicate progress\n    document.getElementById('submit').textContent = 'Sending...';\n    document.getElementById('submit').disabled = true;\n    // Handle the response\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        // Highlight fields and change button depending\n        // upon the response data\n        highlighter(JSON.parse(xhr.responseText));\n      }\n    };\n  };\n}\n'use strict';\n\n// send a ga event for target _blank links and treat as 'outbound'\nvar links = Array.from(document.getElementsByTagName('a'));\nlinks.forEach(function (link) {\n  link.onclick = function (event) {\n    var name = link.innerText;\n    var external = link.target === '_blank';\n    if (external) {\n      ga('send', 'event', 'link', {\n        eventCategory: 'Outbound Link',\n        eventAction: 'click',\n        eventLabel: event.target.href\n      });\n    }\n  };\n});"]}