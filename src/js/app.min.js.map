{"version":3,"sources":["app.min.js"],"names":["highlighter","response","form","document","getElementById","fields","parentNode","removeChild","textContent","disabled","i","length","input","label","previousElementSibling","className","validator","_i","_form","_input","param","_label","insertAdjacentHTML","msg","status","success","error","onsubmit","event","preventDefault","target","data","FormData","xhr","XMLHttpRequest","open","send","onreadystatechange","readyState","DONE","JSON","parse","responseText"],"mappings":"AAAA,cAEA,WAwBE,QAASA,GAAYC,GACnB,GAAIC,GAAOC,SAASC,eAAe,gBAC/BC,GAAU,OAAQ,QAAS,UAE3BF,UAASC,eAAe,iBAC1BD,SAASC,eAAe,gBAAgBE,WAAWC,YAAYJ,SAASC,eAAe,iBAGzFD,SAASC,eAAe,UAAUI,YAAc,OAChDL,SAASC,eAAe,UAAUK,UAAW,CAE7C,KAAK,GAAIC,GAAI,EAAGA,EAAIL,EAAOM,OAAQD,IAAK,CACtC,GAAIE,GAAQT,SAASC,eAAeC,EAAOK,IACvCG,EAAQD,EAAME,sBAClBF,GAAMG,UAAY,GAClBF,EAAME,UAAY,GAGpB,GAAId,EAASe,UAEX,IAAK,GAAIC,GAAK,EAAGA,EAAKhB,EAASe,UAAUL,OAAQM,IAAM,CACrD,GAAIC,GAAQf,SAASC,eAAe,gBAChCe,EAAShB,SAASC,eAAeH,EAASe,UAAUC,GAAIG,OACxDC,EAASF,EAAOL,sBACpBK,GAAOJ,UAAY,QACnBM,EAAON,UAAY,OAEfd,EAASe,UAAUL,SAAWM,EAAK,IAEjCd,SAASC,eAAe,iBAC1BD,SAASC,eAAe,gBAAgBE,WAAWC,YAAYJ,SAASC,eAAe,iBAGzFc,EAAMI,mBAAmB,YAAa,mDAAqDrB,EAASe,UAAUC,GAAIM,IAAM,SAK1HtB,EAASuB,SACPvB,EAASuB,OAAOC,SAClBvB,EAAKoB,mBAAmB,YAAa,qDAAuDrB,EAASuB,OAAOC,QAAU,QAEpHxB,EAASuB,OAAOE,OAClBxB,EAAKoB,mBAAmB,YAAa,mDAAqDrB,EAASuB,OAAOE,MAAQ,SAjExHvB,SAASC,eAAe,gBAAgBuB,SAAW,SAAUC,GAC3DA,EAAMC,gBAEN,IAAI3B,GAAO0B,EAAME,OACbC,EAAO,GAAIC,UAAS9B,GACpB+B,EAAM,GAAIC,eAEdD,GAAIE,KAAK,OAAQ,WAAW,GAE5BF,EAAIG,KAAKL,GAET5B,SAASC,eAAe,UAAUI,YAAc,aAChDL,SAASC,eAAe,UAAUK,UAAW,EAE7CwB,EAAII,mBAAqB,WACnBJ,EAAIK,aAAeJ,eAAeK,MAGpCvC,EAAYwC,KAAKC,MAAMR,EAAIS","file":"app.min.js","sourcesContent":["'use strict';\n\n(function () {\n  // Set an on submit event\n  document.getElementById('contact-form').onsubmit = function (event) {\n    event.preventDefault();\n    // Cache some constants\n    var form = event.target;\n    var data = new FormData(form);\n    var xhr = new XMLHttpRequest();\n    // Set post end-point\n    xhr.open('post', '/submit', true);\n    // Send data\n    xhr.send(data);\n    // Update the send button to indicate progress\n    document.getElementById('submit').textContent = 'Sending...';\n    document.getElementById('submit').disabled = true;\n    // Handle the response\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        // Highlight fields and change button depending\n        // upon the response data\n        highlighter(JSON.parse(xhr.responseText));\n      }\n    };\n  };\n  function highlighter(response) {\n    var form = document.getElementById('contact-form');\n    var fields = ['name', 'email', 'comment'];\n    // Remove any existing messages\n    if (document.getElementById('form-message')) {\n      document.getElementById('form-message').parentNode.removeChild(document.getElementById('form-message'));\n    }\n    // Change send button back to normal\n    document.getElementById('submit').textContent = 'Send';\n    document.getElementById('submit').disabled = false;\n    // Remove any existing error classes\n    for (var i = 0; i < fields.length; i++) {\n      var input = document.getElementById(fields[i]);\n      var label = input.previousElementSibling;\n      input.className = '';\n      label.className = '';\n    }\n    // Highlight invalid input fields\n    if (response.validator) {\n      // Add classes to error items\n      for (var _i = 0; _i < response.validator.length; _i++) {\n        var _form = document.getElementById('contact-form');\n        var _input = document.getElementById(response.validator[_i].param);\n        var _label = _input.previousElementSibling;\n        _input.className = 'input';\n        _label.className = 'text';\n        // Display form error message if necessary\n        if (response.validator.length === _i + 1) {\n          // Clear existing form essages\n          if (document.getElementById('form-message')) {\n            document.getElementById('form-message').parentNode.removeChild(document.getElementById('form-message'));\n          }\n          // Add error message\n          _form.insertAdjacentHTML('beforeend', '<p id=\"form-message\" class=\"form-message error\">' + response.validator[_i].msg + '</p>');\n        }\n      }\n    }\n    // Format and display error or sucess message once submitted\n    if (response.status) {\n      if (response.status.success) {\n        form.insertAdjacentHTML('beforeend', '<p id=\"form-message\" class=\"form-message success\">' + response.status.success + '</p>');\n      }\n      if (response.status.error) {\n        form.insertAdjacentHTML('beforeend', '<p id=\"form-message\" class=\"form-message error\">' + response.status.error + '</p>');\n      }\n    }\n  }\n})();"]}